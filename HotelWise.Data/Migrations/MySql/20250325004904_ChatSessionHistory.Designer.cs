// <auto-generated />
using System;
using HotelWise.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelWise.Data.Migrations.MySql
{
    [DbContext(typeof(HotelWiseDbContextMysql))]
    [Migration("20250325004904_ChatSessionHistory")]
    partial class ChatSessionHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HotelWise.Domain.Model.AI.ChatSessionHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CountMessages")
                        .HasColumnType("int");

                    b.Property<string>("IdToken")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<string>("PromptMessageHistory")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("text");

                    b.Property<DateTime>("SessionDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdToken")
                        .IsUnique()
                        .HasDatabaseName("IX_ChatSessionHistory_IdToken");

                    b.HasIndex("SessionDateTime")
                        .HasDatabaseName("IX_ChatSessionHistory_SessionDateTime");

                    b.ToTable("ChatSessionHistory", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                });

            modelBuilder.Entity("HotelWise.Domain.Model.Hotel", b =>
                {
                    b.Property<long>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("HotelId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreatedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("InitialRoomPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("ModifyUserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.Property<byte>("Stars")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("HotelId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ModifyUserId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1L,
                            City = "Betim",
                            CreatedDate = new DateTime(2025, 3, 25, 0, 49, 4, 556, DateTimeKind.Utc).AddTicks(9795),
                            CreatedUserId = 1L,
                            Description = "An example hotel",
                            HotelName = "Hotel Example",
                            InitialRoomPrice = 936.373348238649400m,
                            Location = "Rodovia 0871 Dalila Travessa",
                            ModifyDate = new DateTime(2025, 3, 25, 0, 49, 4, 556, DateTimeKind.Utc).AddTicks(9798),
                            ModifyUserId = 1L,
                            Stars = (byte)3,
                            StateCode = "PE",
                            Tags = "Luxury,Spa",
                            ZipCode = "93344-026"
                        });
                });

            modelBuilder.Entity("HotelWise.Domain.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email")
                        .HasColumnOrder(3);

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Enable")
                        .HasColumnOrder(1);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("LastAccessDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LastAccessDate");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Refresh_token_expiry_time");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Admin = true,
                            CreatedDate = new DateTime(2025, 3, 25, 0, 49, 4, 557, DateTimeKind.Utc).AddTicks(1221),
                            Email = "admin@sistemas.com",
                            Enable = true,
                            Language = "pt-BR",
                            LastAccessDate = new DateTime(2025, 3, 25, 0, 49, 4, 557, DateTimeKind.Utc).AddTicks(1222),
                            Login = "admin",
                            ModifyDate = new DateTime(2025, 3, 25, 0, 49, 4, 557, DateTimeKind.Utc).AddTicks(1223),
                            Name = "User MOCK ",
                            PasswordHash = new byte[] { 219, 87, 150, 128, 12, 120, 44, 219, 14, 31, 212, 179, 199, 49, 107, 227, 228, 31, 106, 196, 195, 196, 172, 167, 48, 50, 9, 33, 143, 183, 172, 201, 112, 54, 59, 73, 173, 5, 45, 117, 129, 210, 197, 33, 147, 138, 188, 0, 74, 77, 10, 108, 93, 140, 56, 246, 22, 176, 226, 5, 174, 19, 127, 204 },
                            PasswordSalt = new byte[] { 123, 212, 79, 194, 2, 189, 86, 146, 156, 162, 201, 119, 104, 147, 244, 37, 41, 200, 184, 104, 165, 254, 229, 17, 124, 134, 241, 198, 23, 221, 248, 23, 179, 97, 109, 238, 125, 248, 42, 80, 43, 208, 91, 171, 113, 23, 26, 148, 95, 151, 69, 221, 83, 47, 160, 152, 192, 250, 235, 10, 124, 32, 113, 155, 26, 82, 48, 225, 187, 147, 76, 138, 225, 214, 217, 18, 219, 54, 141, 196, 229, 178, 172, 232, 230, 241, 191, 173, 81, 38, 109, 222, 135, 184, 56, 205, 3, 191, 72, 159, 239, 145, 47, 189, 11, 155, 88, 32, 229, 3, 181, 115, 171, 97, 72, 73, 237, 121, 16, 48, 118, 128, 101, 5, 28, 81, 12, 168 },
                            RefreshToken = "",
                            Role = "Admin",
                            TimeZone = "E. South America Standard Time"
                        });
                });

            modelBuilder.Entity("HotelWise.Domain.Model.Hotel", b =>
                {
                    b.HasOne("HotelWise.Domain.Model.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("HotelWise.Domain.Model.User", "ModifyUser")
                        .WithMany()
                        .HasForeignKey("ModifyUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifyUser");
                });
#pragma warning restore 612, 618
        }
    }
}
